name: Release k8s-netperf container image

on:
  push:
    tags:
      - "*" # triggers only if new tag version is pushed

env:
  CONTAINER_REGISTRY: ${{ github.repository_owner == 'krvoora_ocm' && 'quay.io' || '' }} # Set to empty string if not quay.io
  RHEL_VERSION: ubi9
  GO_VER: 1.19

jobs:

  build-and-push-container-images:
    name: Build and Push Container Images
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup docker-buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug
          config-inline: |
            [worker.oci]
              max-parallelism = 1

      - name: Checkout
        uses: actions/checkout@v2 # Use v2 instead of v3

      - name: Check if CONTAINER_REGISTRY is set
        id: check_registry
        run: echo "::set-output name=registry_set::$(if [ -n '${{ env.CONTAINER_REGISTRY }}' ]; then echo 'true'; else echo 'false'; fi)"

      - name: Login to the ${{ env.CONTAINER_REGISTRY }} Container Registry
        if: steps.check_registry.outputs.registry_set == 'true'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ env.CONTAINER_REGISTRY == 'quay.io' && secrets.QUAY_IO_USERNAME || '' }} # Set to empty string if not quay.io
          password: ${{ env.CONTAINER_REGISTRY == 'quay.io' && secrets.QUAY_IO_TOKEN || '' }}    # Set to empty string if not quay.io
        env:
          CONTAINER_REGISTRY: ${{ env.CONTAINER_REGISTRY }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.CONTAINER_REGISTRY }}/${{ github.repository_owner }}/netperf
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}

      - name: Build and push multi-arch Image
        id: push
        uses: docker/build-push-action@v2 # Use v2 instead of v3
        with:
          context: .
          file: containers/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          push: ${{ github.event_name != 'pull_request' }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            RHEL_VERSION=${{ env.RHEL_VERSION }}
            GO_VER=${{ env.GO_VER }}
            GO_TAGS=
